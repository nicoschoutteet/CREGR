}
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
#loop through csv files
CREG_datalist <- list()
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
getwd()
library(tidyverse)
Eliafilenames <- list.files("Elia source data", pattern = "\\.csv")
#file lists
Eliafilepaths <- list.files("Elia source data", pattern = "\\.csv", full.names = TRUE)
#CNE(C) translation table
CNE_translation <- read_csv("CNE EIC translation table.csv")
C_translation <- read_csv("C EIC translation table.csv")
#modified column names
columnnameslist <- readLines("column names.csv")
columnnameslist_selected <- readLines("column names_selected.csv")
#loop through csv files
temp <- tibble()
getwd()
library(tidyverse)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
#loop through csv files
CREG_datalist <- list()
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
library(tidyverse)
library(ggforce)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
#loop through csv files
CREG_datalist <- list()
for (i in seq_along(CREGfilenames)) {
CREG_datalist[[i]] <- read_csv(CREGfilepaths[[i]])
}
#bind rows
CREG_dataframe <- bind_rows(CREG_datalist[1:273])
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
library(tidyverse)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
#loop through csv files
CREG_datalist <- list()
#bind rows
CREG_dataframe <- bind_rows(CREG_datalist[1:273])
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
#column types
columntypes <- list(col_datetime(format =""),
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double())
for (i in seq_along(CREGfilenames)) {
CREG_datalist[[i]] <- read_csv(CREGfilepaths[[i]], col_types = columntypes)
}
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
library(tidyverse)
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
getwd()
library(tidyverse)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
getwd()
library(tidyver)
library(tidyverse)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
#column types
columntypes <- list(col_datetime(format =""),
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double())
#loop through csv files
CREG_datalist <- list()
for (i in seq_along(CREGfilenames)) {
CREG_datalist[[i]] <- read_csv(CREGfilepaths[[i]], col_types = columntypes)
}
#bind rows
CREG_dataframe <- bind_rows(CREG_datalist)
library(tidyverse)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
#loop through csv files
CREG_datalist <- list()
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
#column types
columntypes <- list(col_datetime(format =""),
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_character(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double(),
col_double())
for (i in seq_along(CREGfilenames)) {
CREG_datalist[[i]] <- read_csv(CREGfilepaths[[i]], col_types = columntypes)
}
#bind rows
CREG_dataframe <- bind_rows(CREG_datalist)
#add columns
CREG_dataframe <- CREG_dataframe %>%
mutate(MACZTincl3rdC_perc = MCCCincl3rdC_perc + MNCCincl3rdC_perc, MACZTexcl3rdC_perc = MCCCexcl3rdC_perc + MNCCexcl3rdC_perc) %>%
mutate(MACZTincl3rdC_discr = ifelse(MACZTincl3rdC_perc < .25, "MACZT < 25%",
ifelse(MACZTincl3rdC_perc < .5, "25% <= MACZT < 50%",
ifelse(MACZTincl3rdC_perc < .696, "50% <= MACZT < 70%", "MACZT >= 70%"))),
shadow_price_discr = ifelse(is.na(shadow_price), "shadow price = 0",
ifelse(shadow_price == 0, "shadow price = 0", "shadow price > 0")),
MACZTexcl3rdC_discr = ifelse(MACZTexcl3rdC_perc < .25, "MACZT < 25%",
ifelse(MACZTexcl3rdC_perc < .5, "25% <= MACZT < 50%",
ifelse(MACZTexcl3rdC_perc < .7, "50% <= MACZT < 70%", "MACZT >= 70%")))) %>%
mutate(MACZTincl3rdC_minMACZT_perc = MACZTincl3rdC_perc - minMACZT_perc) %>%
mutate(MACZTincl3rdC_minMACZT_discr = ifelse(MACZTincl3rdC_minMACZT_perc < -.002, "MACZT < minMACZT", "MACZT >= minMACZT"))
CREG_dataframe$CNE_Type[is.na(CREG_dataframe$CNE_Type) == "TRUE"] <- "internal"
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
#file lists
CREGfilepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
CREGfilenames <- list.files("CREG source data", pattern = "\\.csv")
getwd()
library(tidyverse)
#file lists
filepaths <- list.files("CREG source data", pattern = "\\.csv", full.names = TRUE)
devtools::install_github("krose/entsoeapi")
library(entsoeapi)
en_eic()
en_load_actual_total_load(eic = "10YBE----------2")
library(tidyverse)
en_load_actual_total_load(eic = "10YBE----------2", period_start = lubridate::ymd("2020-01-01", tz = "CET", period_end = lubridate::ymd("2020-01-01 23:00", tz = "CET")))
library(rvest)
library(ggplot2)
library(tidyr)
vlaverturl <- "https://www.vlaamsparlement.be/vlaamse-volksvertegenwoordigers"
vlaverthtml <- read_html(vlaverturl)
View(vlaverthtml)
##Get the names, parties and the urls of the profile pages
vlavert <- vlaverthtml %>% html_nodes(".field--name-volledige-naam") %>% html_text()
vlapart <- vlaverthtml %>% html_nodes(".field--name-huidigefractie") %>% html_text()
vlaverturls <- vlaverthtml %>% html_nodes("span a") %>% html_attr("href")
rawdata <- data.frame()
index <- 0
##Go to the profile pages of all the MP's and collect the data
base_verturl <- "https://www.vlaamsparlement.be"
for(verturlid in vlaverturls){
print(index)
index <- index + 1
verturl <- paste(base_verturl,verturlid,sep="")
verthtml <- read_html(verturl)
##Initiatieven
vertiniturl <- verthtml %>% html_node(".field--name-recent-documents-link .field__items .field__item a") %>% html_attr("href")
vertiniturl <- sub("publicatiedatum[van][date]=all","publicatiedatum[van][date]=current_legislature", vertiniturl, fixed = TRUE)
initiatieven <- read_html(paste(base_verturl, vertiniturl, sep="")) %>% html_node("h1.page-title") %>% html_text()
##Vragen
vertvragenurl <- verthtml %>% html_node(".field--name-recent-questions-link .field__items .field__item a") %>% html_attr("href")
vertvragenurl <- sub("publicatiedatum[van][date]=all","publicatiedatum[van][date]=current_legislature", vertvragenurl, fixed = TRUE)
vragen <- read_html(paste(base_verturl, vertvragenurl, sep="")) %>% html_node("h1.page-title") %>% html_text()
##Tussenkomsten
verttussenkurl <- verthtml %>% html_node(".field--name-recent-interventions-link .field__items .field__item a") %>% html_attr("href")
verttussenkurl <- sub("publicatiedatum[van][date]=all","publicatiedatum[van][date]=current_legislature", verttussenkurl, fixed = TRUE)
tussenkomsten <- read_html(paste(base_verturl, verttussenkurl, sep="")) %>% html_node("h1.page-title") %>% html_text()
vertdata <- data.frame()
vertdata <- data.frame(vlavert[index], vlapart[index], initiatieven, vragen, tussenkomsten, vlaverturls[index])
rawdata <- rbind(rawdata, vertdata)
}
colnames(rawdata) <- c("naam", "partij", "initiatieven", "vragen", "tussenkomsten", "url")
vlaverturl <- "https://www.vlaamsparlement.be/vlaamse-volksvertegenwoordigers"
vlaverthtml <- read_html(vlaverturl)
##Get the names, parties and the urls of the profile pages
vlavert <- vlaverthtml %>% html_nodes(".field--name-volledige-naam") %>% html_text()
vlapart <- vlaverthtml %>% html_nodes(".field--name-huidigefractie") %>% html_text()
vlaverturls <- vlaverthtml %>% html_nodes("span a") %>% html_attr("href")
rawdata <- data.frame()
index <- 0
##Go to the profile pages of all the MP's and collect the data
base_verturl <- "https://www.vlaamsparlement.be"
for(verturlid in vlaverturls){
print(index)
index <- index + 1
verturl <- paste(base_verturl,verturlid,sep="")
verthtml <- read_html(verturl)
##Initiatieven
vertiniturl <- verthtml %>% html_node(".field--name-recent-documents-link .field__items .field__item a") %>% html_attr("href")
vertiniturl <- sub("publicatiedatum[van][date]=all","publicatiedatum[van][date]=current_legislature", vertiniturl, fixed = TRUE)
initiatieven <- read_html(paste(base_verturl, vertiniturl, sep="")) %>% html_node("h1.page-title") %>% html_text()
##Vragen
vertvragenurl <- verthtml %>% html_node(".field--name-recent-questions-link .field__items .field__item a") %>% html_attr("href")
vertvragenurl <- sub("publicatiedatum[van][date]=all","publicatiedatum[van][date]=current_legislature", vertvragenurl, fixed = TRUE)
vragen <- read_html(paste(base_verturl, vertvragenurl, sep="")) %>% html_node("h1.page-title") %>% html_text()
##Tussenkomsten
verttussenkurl <- verthtml %>% html_node(".field--name-recent-interventions-link .field__items .field__item a") %>% html_attr("href")
verttussenkurl <- sub("publicatiedatum[van][date]=all","publicatiedatum[van][date]=current_legislature", verttussenkurl, fixed = TRUE)
tussenkomsten <- read_html(paste(base_verturl, verttussenkurl, sep="")) %>% html_node("h1.page-title") %>% html_text()
vertdata <- data.frame()
vertdata <- data.frame(vlavert[index], vlapart[index], initiatieven, vragen, tussenkomsten, vlaverturls[index])
rawdata <- rbind(rawdata, vertdata)
}
colnames(rawdata) <- c("naam", "partij", "initiatieven", "vragen", "tussenkomsten", "url")
finaldata <- rawdata
##Remove text we don't need
finaldata$initiatieven <- sub("Ongeveer ", "", finaldata$initiatieven, fixed=TRUE)
finaldata$initiatieven <- sub(" zoekresultaten in de huidige zittingsperiode", "", finaldata$initiatieven, fixed=TRUE)
finaldata$vragen <- sub("Ongeveer ", "", finaldata$vragen, fixed=TRUE)
finaldata$vragen <- sub(" zoekresultaten in de huidige zittingsperiode", "", finaldata$vragen, fixed=TRUE)
finaldata$tussenkomsten <- sub("Ongeveer ", "", finaldata$tussenkomsten, fixed=TRUE)
finaldata$tussenkomsten <- sub(" zoekresultaten in de huidige zittingsperiode", "", finaldata$tussenkomsten, fixed=TRUE)
##Convert to numbers
finaldata$initiatieven <- as.integer(finaldata$initiatieven)
finaldata$vragen <- as.integer(finaldata$vragen)
finaldata$tussenkomsten <- as.integer(finaldata$tussenkomsten)
##Format names and ad questions and initiatives
finaldata <- finaldata %>% separate(naam, c("voornaam", "achternaam"), " ", extra = "merge")
finaldata$initiaal <- paste(substr(finaldata$voornaam, 1, 1), ".", sep="")
finaldata$initnaam <- paste(finaldata$initiaal, finaldata$achternaam, sep=" ")
finaldata$vrageninitiatieven <- finaldata$vragen + finaldata$initiatieven
median.tussenkomsten <- median(finaldata$tussenkomsten)
median.vrageninitiatieven <- median(finaldata$vrageninitiatieven)
finaldata <- select(finaldata, voornaam, achternaam, initiaal, initnaam, partij, initiatieven, vragen, tussenkomsten, vrageninitiatieven, profiel, url)
write.csv(finaldata, file="finaldata_30-09.csv", row.names = FALSE)
scatter <- ggplot(finaldata, aes(x = tussenkomsten, y = vrageninitiatieven, col = partij)) + geom_point( alpha = 0.7, size = 3) + theme_minimal() + geom_text(aes(label = initnaam), nudge_y = 10) + scale_colour_manual(values = c("#83de62","#ffac12", "#003d6d", "#f5822a", "#e23a3f", "#5a5101", "#000000", "#cccccc")) + labs(x = "Aantal tussenkomsten", y = "Aantal vragen en initiatieven") + theme(legend.position="none") + geom_hline(aes(yintercept=median.vrageninitiatieven)) + geom_vline(aes(xintercept=median.tussenkomsten))
scattergrid <- ggplot(finaldata, aes(x = tussenkomsten, y = vrageninitiatieven, col = partij)) + geom_point( alpha = 0.2, size = 3) + theme_minimal() + scale_colour_manual(values = c("#83de62","#ffac12", "#003d6d", "#f5822a", "#e23a3f", "#ffe500", "#000000", "#cccccc")) + labs(x = "Aantal tussenkomsten", y = "Aantal vragen en initiatieven") + theme(legend.position="none") + geom_hline(aes(yintercept=median.vrageninitiatieven)) + geom_vline(aes(xintercept=median.tussenkomsten)) + facet_grid(. ~ partij) + theme(panel.background = element_rect(fill = '#fef7ea', colour = '#fef7ea'), plot.background = element_rect(fill = '#fef7ea', colour = '#fef7ea'))
get("https://api.open-notify.org/astros.json")
rest = GET("https://api.open-notify.org/astros.json")
res -< GET("https://api.open-notify.org/astros.json")
res -> GET("https://api.open-notify.org/astros.json")
res <- GET("https://api.open-notify.org/astros.json")
res <- get("https://api.open-notify.org/astros.json")
library(httr)
library(tidyverse)
res = get("https://api.open-notify.org/astros.json")
res = GET(“http://api.open-notify.org/iss-pass.json",
query = list(lat = 40.7, lon = -74))
res = GET(“http://api.open-notify.org/iss-pass.json", query = list(lat = 40.7, lon = -74))
res = get(“http://api.open-notify.org/iss-pass.json",
query = list(lat = 40.7, lon = -74))
library(devtools)
packageVersion("devtools")
install.packages("devtools")
install.packages("devtools")
packageVersion("devtools")
library(tidyverse)
library(fs)
create_package()
create_package("C:\Users\schoutteet\OneDrive - CREG\Documents\R"")
create_package("C:/Users/schoutteet/OneDrive - CREG/Documents/R/foofactors")
library(fs)
install.packages("fs")
install.packages("fs")
library(fs)
library(tidyverse)
install.packages("installr")
library(installr)
updateR()
library(tidyverse)
install.packages("tidyverse")
git config --global user.name "Nico Schoutteet"
git config --global user.name "nicoschoutteet"
git config --global user.email "nico.schoutteet@creg.be"
git config --global user.name "nicoschoutteet"
git config --global user.name "nicoschoutteet"
# libraries ---------------------------------------------------------------
library(tidyverse)
library(devtools)
library(CREGRPackage)
install_github("nicoschoutteet/CREGRPackage")
library(CREGRPackage)
CREGRPackage::
detach(CREGRPackage)
CREGRPackage::
detach("CREGRPackage"")
detach("package:CREGRPackage", unload = TRUE)
install_github("nicoschoutteet/CREGRPackage")
detach("package:CREGRPackage", unload = TRUE)
install_github("nicoschoutteet/CREGRPackage")
library(CREGRPackage)
library(CREGRPackage)
install_github("nicoschoutteet/CREGRPackage")
# libraries ---------------------------------------------------------------
library(tidyverse)
library(devtools)
install_github("nicoschoutteet/CREGRPackage")
devtools::install_github("nicoschoutteet/CREGRPackage")
remove.packages("CREGRPackage")
remove.packages("CREGR")
devtools::install_github("nicoschoutteet/CREGRPackage")
library(CREGRPackage)
devtools::install_github("nicoschoutteet/CREGRPackage")
installr::updater()
library(tidyverse)
library(devtools)
install_github("nicoschoutteet/CREGRPackage")
install_github("nicoschoutteet/CREGRPackage")
library(devtools)
install_github("nicoschoutteet/CREGRPackage")
install.packages("devtools")
install.packages("roxygen2")
library(tidyverse)
library(devtools)
library(roxygen2)
setwd("C:/Users/schoutteet/OneDrive - CREG/Documents/GitHub")
create("CREGR")
getwd()
setwd("./CREGR")
document()
setwd("./CREGR")
getwd()
document(à)
document()
document()
#' @examples ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + theme_CREG()
document()
document()
document()
document()
document()
save_CREG  <- function(filename) {
ggsave(paste0(filename, ".png"), height = 10, width = 16, units = "cm")
}
document()
roxygen2::document()
library(devtools)
document()
devtools::document()
devtools::document()
devtools::document()
palette_CREG <- list(
`countries` = colour_CREG("blue2", "red", "orange", "green", "yellow"),
`main` = colour_CREG("blue2", "red", "orange", "green", "yellow", "pink", "purple"),
`blue` = colour_CREG("blue2", "blue3", "grey1", "grey2")
)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
getwd()
?tail()
left_join(select(loadCSV_CREG(subfolder, filename, col_types)),
DateTime, ncol:ncol-nchar(col_types),
by = c("DateTime" = "DateTime"),
keep = FALSE)
?left_join()
document()
library(devtools)
document()
document()
document()
document()
document()
document()
document()
document()
list <- c("BENL_DAM", "FRDEAT_DAM", "nnnn", "nnnnnn")
list <- list("BENL_DAM", "FRDEAT_DAM", "nnnn", "nnnnnn")
View(list)
list <- list(c("BENL_DAM", "FRDEAT_DAM"), c("nnnn", "nnnnnn"))
View(list)
list[[1]]
list[[1, 2]]
list[[1, 1]]
list[[1]]
list[[1[[1]]]]
list[[1[[2]]]]
list[[1:2]]
list[[1:1]]
list[[2:1]]
list[[2:2]]
list[2:2]
View(list)
files <- list(filenames, col_types)
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
files <- list(filenames, col_types)
}
loadmultiplecsv_CREG("source data", "test", "test2")
test <- loadmultiplecsv_CREG("source data", "test", "test2")
View(test)
test <- loadmultiplecsv_CREG("source data", c("test", "test2", c("test3", "test4")))
test <- loadmultiplecsv_CREG("source data", c("test", "test2"), c("test3", "test4"))
View(test)
test[1]
test[1$1]
test[1][1]
test[1][2]
test[2]
list <- list(c("BENL_DAM", "FRDEAT_DAM"), c("nnnn", "nnnnnn"))
test <- loadmultiplecsv_CREG("source data", c("test", "test2"), c("test3", "test4"))
files <- data.rame(filenames, col_types)
files <- data.frame(filenames, col_types)
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
files <- data.frame(filenames, col_types)
}
test <- loadmultiplecsv_CREG("source data", c("test", "test2"), c("test3", "test4"))
View(test)
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
temp <- data.frame(filenames, col_types)
}
test <- loadmultiplecsv_CREG("source data", c("test", "test2"), c("test3", "test4"))
View(test)
temp <- list(filenames, col_types)
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
temp <- list(filenames, col_types)
}
test <- loadmultiplecsv_CREG("source data", c(1, 2), c(3, 4))
?lapply
temp <- list(filenames, col_types)
temp <- list(filenames, col_types)
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
temp <- list(filenames, col_types)
#lapply(x = temp[1], FUN = )
}
test <- loadmultiplecsv_CREG("source data", c(1, 2), c(3, 4))
test <- loadmultiplecsv_CREG("source data", c(1, 2), c(3, 4))
temp <- list(filenames, col_types)
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
temp <- list(filenames, col_types)
}
test <- loadmultiplecsv_CREG("source data", c(1, 2), c(3, 4))
test <- loadmultiplecsv_CREG("source data", c(1, 2), c(3, 4))
print(temp)
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
temp <- list(filenames, col_types)
print(temp)
}
test <- loadmultiplecsv_CREG("source data", c(1, 2), c(3, 4))
test <- loadmultiplecsv_CREG("source data", c("file2", "file2"), c(3, 4))
test
lapply(test[[1]], substr(start = 1, stop = 2))
lapply(test[[1]], substr(., start = 1, stop = 2))
lapply(test[[1]], substr(test[[1]], start = 1, stop = 2))
substr(test[[1]], start = 1, stop = 2)
print(temp[[1]])
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
temp <- list(filenames, col_types)
print(temp[[1]])
}
test <- loadmultiplecsv_CREG("source data", c("file1", "file2"), c(3, 4))
print(paste0(subfolder, "/", temp1, temp2))
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
temp <- list(filenames, col_types)
print(paste0(subfolder, "/", temp1, temp2))
print(temp[[1]])
}
test <- loadmultiplecsv_CREG("source data", c("file1", "file2"), c(3, 4))
print(paste0(subfolder, "/", temp[[1]], temp[[2]]))
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
temp <- list(filenames, col_types)
print(paste0(subfolder, "/", temp[[1]], temp[[2]]))
}
test <- loadmultiplecsv_CREG("source data", c("file1", "file2"), c(3, 4))
test <- loadmultiplecsv_CREG("source data", c("BENL_DAM", "FRDEAT_DAM"), c(3, 4))
print(paste0(subfolder, "/", temp[[1]], ".csv", temp[[2]]))
loadmultiplecsv_CREG <- function(subfolder, filenames, col_types) {
temp <- list(filenames, col_types)
print(paste0(subfolder, "/", temp[[1]], ".csv", temp[[2]]))
}
test <- loadmultiplecsv_CREG("source data", c("BENL_DAM", "FRDEAT_DAM"), c(3, 4))
devtools::document()
devtools::document()
